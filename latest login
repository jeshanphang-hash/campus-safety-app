import React, { useState } from "react"
import {
  SafeAreaView,
  View,
  Text,
  TextInput,
  TouchableOpacity,
  StyleSheet,
  Image,
  Alert,
} from "react-native"
import { LinearGradient } from "expo-linear-gradient"
import { BlurView } from "expo-blur"
import { supabase } from "../supabaseClient"

export default function LoginScreen() {
  const [email, setEmail] = useState("")
  const [password, setPassword] = useState("")
  const [isLogin, setIsLogin] = useState(true)
  const [error, setError] = useState<string | null>(null)

  const handleAuth = async () => {
    if (isLogin) {
      // Login
      const { error } = await supabase.auth.signInWithPassword({
        email,
        password,
      })
      if (error) setError(error.message)
      else Alert.alert("✅ Login successful!")
    } else {
      // Sign Up
      const { error } = await supabase.auth.signUp({
        email,
        password,
      })
      if (error) setError(error.message)
      else Alert.alert("✅ Check your email to confirm your account!")
    }
  }

  return (
    <LinearGradient colors={["#6366f1", "#4f46e5"]} style={{ flex: 1 }}>
      <SafeAreaView style={styles.container}>
        {/* App Logo */}
        <Image
          source={{
            uri: "https://i.ibb.co/3mcqsssw/11-ezgif-com-webp-to-png-converter.png",
          }}
          style={styles.logo}
        />

        {/* Headline */}
        <Text style={styles.headline}>Campus Safety</Text>
        <Text style={styles.subtitle}>
          Stay secure. Connect to your campus safety system instantly.
        </Text>

        {/* Card with inputs */}
        <BlurView intensity={80} tint="light" style={styles.card}>
          <Text style={styles.cardTitle}>
            {isLogin ? "Login" : "Create Account"}
          </Text>

          <View style={styles.inputWrapper}>
            <TextInput
              style={styles.input}
              placeholder="Email"
              placeholderTextColor="#666"
              value={email}
              onChangeText={setEmail}
              autoCapitalize="none"
              keyboardType="email-address"
            />
          </View>
          <View style={styles.inputWrapper}>
            <TextInput
              style={styles.input}
              placeholder="Password"
              placeholderTextColor="#666"
              secureTextEntry
              value={password}
              onChangeText={setPassword}
            />
          </View>

          {error && <Text style={styles.error}>{error}</Text>}

          {/* Main button */}
          <TouchableOpacity style={styles.button} onPress={handleAuth}>
            <Text style={styles.buttonText}>
              {isLogin ? "Login" : "Sign Up"}
            </Text>
          </TouchableOpacity>

          {/* Toggle link */}
          <TouchableOpacity onPress={() => setIsLogin(!isLogin)}>
            <Text style={styles.toggleText}>
              {isLogin
                ? "Don't have an account? Sign Up"
                : "Already have an account? Login"}
            </Text>
          </TouchableOpacity>
        </BlurView>
      </SafeAreaView>
    </LinearGradient>
  )
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
    paddingHorizontal: 30,
  },
  logo: {
    width: 80,
    height: 80,
    marginBottom: 20,
    borderRadius: 40,
  },
  headline: {
    fontSize: 28,
    fontWeight: "800",
    color: "#fff",
    textAlign: "center",
    marginBottom: 10,
  },
  subtitle: {
    fontSize: 16,
    color: "#e0e0e0",
    textAlign: "center",
    marginBottom: 25,
    lineHeight: 22,
  },
  card: {
    width: "85%",
    maxWidth: 450,
    borderRadius: 20,
    padding: 20,
    backgroundColor: "rgba(255,255,255,0.25)",
    overflow: "hidden",
    alignItems: "center",
  },
  cardTitle: {
    fontSize: 20,
    fontWeight: "700",
    color: "#333",
    marginBottom: 15,
  },
  inputWrapper: {
    width: "100%",
    backgroundColor: "rgba(255,255,255,0.6)",
    borderRadius: 8,
    paddingHorizontal: 10,
    marginBottom: 12,
    height: 42,
    justifyContent: "center",
  },
  input: {
    color: "#000",
    fontSize: 14,
    paddingVertical: 0,
  },
  button: {
    backgroundColor: "#4f46e5",
    borderRadius: 30,
    paddingVertical: 12,
    paddingHorizontal: 50,
    marginTop: 10,
    marginBottom: 12,
  },
  buttonText: {
    fontSize: 16,
    fontWeight: "700",
    color: "#fff",
    textAlign: "center",
  },
  toggleText: {
    fontSize: 14,
    color: "#333",
    textDecorationLine: "underline",
  },
  error: {
    color: "red",
    marginBottom: 10,
    fontSize: 13,
  },
})
